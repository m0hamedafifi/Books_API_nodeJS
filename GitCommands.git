-- To add user name and email
$ git config --global user.name "Your Name Comes Here"
$ git config --global user.email you@yourdomain.example.com

-- To check user name and mail 
$ git config --get user.name
$ git config --get user.email

-- To create local repository 
$ git init "my project"

-- To clone existing repository from remote server
$ git clone https://github.com/user/repo.git

-- To check all directories
$ ls -a

-- To open  
$ cd my_project/

-- To see status of files in the directory
$ git status

-- To create file (.any type you want) 
$ touch README.md

-- To commit all files to unstage
$ git add .

-- To commit specific file to unstage
$ git add "file name"

-- To commit files on unstage to stage
$ git commit -m "commit message comes here"

-- To git history of logs
$ git log

-- To checkout a particular version or branch
$ git checkout master (or any other branch)

-- To checkout a particular version
$ git checkout HEAD~1

-- To get all branches
$ git branch -a

-- to create branch 
$ git branch new-branch

-- to know what is my branch 
$ git branch

-- Switching between branches To switch to branch (if this branch not existing will create new one)
$ git checkout -b your-branch-name

-- Merging two branches
$ git merge sourceBranchName

-- Deleting Branches
$ git branch -d targetBranchName

-- check if there remote links 
$ git remote -v

-- Add remote link
$ git remote add origin https://github.com/username/repo.git

-- Pushing changes to remote repo
$ git push origin your-branch-name

-- pull code from repository
$ git pull origin master

-- To clear timeline 
$ clear


-- Update link remote origin
$ git remote set-url origin https://github.com/username/repo.git</s>

-- to fetch branch
$ git fetch origin branch_name:branch_name

-- To see the difference between current and last committed file(s)
$ git diff

-- To clean difference
$ git reset --hard HEAD
-- To remove untracked files
$ git clean -f

-- to merge from origin
$ git merge --allow-unrelated-histories FETCH_HEAD
or 
$ git merge origin/master

-- to force merge origin
$ git merge --allow-unrelated-histories -X theirs FETCH_HEAD
or
$ git merge --ff origin/master
-- To abort a conflicting merge
$ git merge --abort

-- keep your local changes but move them aside temporarily
$ git stash save "Your commit message here"

-- Apply one or more stashed entries back to your working tree
$ git stash apply [stash@{0}]

-- list all of your stashed changes
$ git stash list

-- drop a specific stashed state
$ git stash drop stash@{0}

-- Drop everything in the stash, leaving nothing.
$ git stash clear