exports.queryList = {
  getStoreListQuery: `SELECT STORE_ID, STORE_NAME, DESCRIPTION, STORE_CODE
                        FROM BMS.STORE;`,

  getOneStoreQuery: `SELECT STORE_ID, STORE_NAME, DESCRIPTION, STORE_CODE
      FROM BMS.STORE
      where STORE_ID = $1;
      `,

  saveStoreQuery: `INSERT INTO BMS.STORE
    ( STORE_NAME, DESCRIPTION, STORE_CODE, ADDRESS, CREATED_ON, CREATED_BY )
    VALUES($1,$2 ,$3 ,$4 ,$5 ,$6); `,

  updateStoreQuery: `
    UPDATE BMS.STORE
    SET STORE_NAME=$2, DESCRIPTION=$3, STORE_CODE=$4, CREATED_ON=$5, CREATED_BY=$6, ACTIVE=$7, ADDRESS=$8
    WHERE STORE_ID= $1;
    `,

    removeStoreQuery : `delete
    FROM BMS.STORE
    where STORE_ID = $1;
    `,

  getBookListQuery: `SELECT BOOK_ID, BOOK_TITLE, DESCRIPTION,PRICE,IN_STOCK
                        FROM BMS.BOOK; `,

  getBookDetailsQuery: `SELECT BOOK_ID, BOOK_TITLE, DESCRIPTION, STORE_CODE, PUBLISHER, AUTHOR, PAGES, CREATED_ON, CREATED_BY, IN_STOCK, PRICE
  FROM BMS.BOOK 
  WHERE BOOK_ID = $1;`,

  addBooksQuery: `INSERT INTO BMS.BOOK
    ( BOOK_TITLE, DESCRIPTION, STORE_CODE, PUBLISHER, AUTHOR, PAGES, PRICE ,CREATED_ON, CREATED_BY, IN_STOCK)
    VALUES( $1,$2, $3, $4, $5, $6, $7, $8, $9, $10); `,

    updateBookQuery: `UPDATE BMS.BOOK
    SET BOOK_TITLE=$2, DESCRIPTION=$3, STORE_CODE=$4, PUBLISHER=$5,AUTHOR=$6, PAGES=$7, PRICE=$8 ,CREATED_ON=$9, CREATED_BY=$10, IN_STOCK=$11
    WHERE BOOK_ID= $1;
    `,
    deleteBookQuery : `DELETE FROM BMS.BOOK
    WHERE BOOK_ID = $1;
    `,
    
    addAuditAction : `INSERT INTO BMS.AUDIT
    (AUDIT_ACTION, AUDIT_DATA, STATUS, AUDIT_ERROR, AUDIT_BY, AUDIT_ON)
    VALUES( $1, $2, $3, $4, $5, $6);` ,

    getUserListQuery : `SELECT USER_ID, USERNAME, FULL_NAME, "password", EMAIL, USER_TYPE_CODE, USER_DISABLED, VERIFIED_USER, CREATED_BY, CREATED_ON, UPDATED_BY, UPDATED_ON
    FROM BMS.APP_USERS;`,

    getUserByUserName : `SELECT USER_ID, USERNAME, FULL_NAME, "password", EMAIL, USER_TYPE_CODE, USER_DISABLED, VERIFIED_USER, CREATED_BY, CREATED_ON, UPDATED_BY, UPDATED_ON
    FROM BMS.APP_USERS 
    WHERE LOWER(USERNAME) = LOWER($1) ;`,

    getUserByEmail : `SELECT USER_ID, USERNAME, FULL_NAME, "password", EMAIL, USER_TYPE_CODE, USER_DISABLED, VERIFIED_USER, CREATED_BY, CREATED_ON, UPDATED_BY, UPDATED_ON
    FROM BMS.APP_USERS 
    WHERE LOWER(EMAIL) = LOWER($1) ;`,
    

    checkUserPassword: `select * from BMS.APP_USERS
    where username = $1 and password = crypt($2,'password');`,

    insertNewUser: `INSERT INTO BMS.APP_USERS
    ( USERNAME, FULL_NAME, "password", EMAIL, USER_TYPE_CODE, USER_DISABLED, VERIFIED_USER, CREATED_BY, CREATED_ON )
    VALUES($1, $2, $3, $4, $5, $6, $7, $8,$9)
    RETURNING USER_ID;` ,

    CheckUserNameOrEmailIsExists : `
    SELECT Count(USER_ID)
    FROM BMS.APP_USERS 
    WHERE LOWER(USERNAME) = LOWER($1) 
    or LOWER(EMAIL) = LOWER($2) ;
    `,
    CheckUserNAmeExist: `
    SELECT Count(USER_ID)
    FROM BMS.APP_USERS 
    WHERE LOWER(USERNAME) = LOWER($1)

    `,
    CheckEmailExist: `
    SELECT Count(USER_ID)
    FROM BMS.APP_USERS 
    WHERE LOWER(EMAIL) = LOWER($1)
    `,
    SignInQuery:`
    SELECT USER_ID, USERNAME,"password", EMAIL ,USER_TYPE_CODE,IS_ADMIN
    FROM BMS.APP_USERS
    WHERE LOWER(USERNAME) = LOWER($1)
    or LOWER(EMAIL) = LOWER($1) ;
    `
    
};
